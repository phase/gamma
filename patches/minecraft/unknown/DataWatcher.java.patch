--- minecraft/src/net/minecraft/unknown/DataWatcher.java	2018-01-21 00:00:38.000000000 -0800
+++ src/main/java/net/minecraft/unknown/DataWatcher.java	2018-01-21 00:31:12.222932324 -0800
@@ -2,6 +2,7 @@
 
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
+import java.io.IOException;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -9,7 +10,7 @@
 
 public class DataWatcher {
    private static final HashMap dataTypes = new HashMap();
-   private final Map watchedObjects = new HashMap();
+   private final Map<Integer, WatchableObject> watchedObjects = new HashMap<>();
    private boolean objectChanged;
 
    public DataWatcher() {
@@ -25,7 +26,7 @@
          throw new IllegalArgumentException("Duplicate id value for " + var1 + "!");
       } else {
          WatchableObject var4 = new WatchableObject(var3.intValue(), var1, var2);
-         this.watchedObjects.put(Integer.valueOf(var1), var4);
+         this.watchedObjects.put(var1, var4);
       }
    }
 
@@ -51,7 +52,7 @@
 
    }
 
-   public static void writeObjectsInListToStream(List var0, DataOutputStream var1) {
+   public static void writeObjectsInListToStream(List<WatchableObject> var0, DataOutputStream var1) throws IOException  {
       if (var0 != null) {
          for(WatchableObject var3 : var0) {
             writeWatchableObject(var1, var3);
@@ -61,7 +62,7 @@
       var1.writeByte(127);
    }
 
-   public void writeWatchableObjects(DataOutputStream var1) {
+   public void writeWatchableObjects(DataOutputStream var1) throws IOException  {
       for(WatchableObject var3 : this.watchedObjects.values()) {
          writeWatchableObject(var1, var3);
       }
@@ -69,7 +70,7 @@
       var1.writeByte(127);
    }
 
-   private static void writeWatchableObject(DataOutputStream var0, WatchableObject var1) {
+   private static void writeWatchableObject(DataOutputStream var0, WatchableObject var1) throws IOException {
       int var2 = (var1.getObjectType() << 5 | var1.getDataValueId() & 31) & 255;
       var0.writeByte(var2);
       switch(var1.getObjectType()) {
@@ -103,7 +104,7 @@
 
    }
 
-   public static List readWatchableObjects(DataInputStream var0) {
+   public static List readWatchableObjects(DataInputStream var0) throws IOException  {
       ArrayList var1 = null;
 
       for(byte var2 = var0.readByte(); var2 != 127; var2 = var0.readByte()) {
@@ -149,7 +150,7 @@
       return var1;
    }
 
-   public void updateWatchedObjectsFromList(List var1) {
+   public void updateWatchedObjectsFromList(List<WatchableObject> var1) {
       for(WatchableObject var3 : var1) {
          WatchableObject var4 = (WatchableObject)this.watchedObjects.get(Integer.valueOf(var3.getDataValueId()));
          if (var4 != null) {
